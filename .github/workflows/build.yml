on:
  push:
    branches:
      - main
      - release/**
      - feature/**
  pull_request:
    branches:
      - main
      - release/**

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        arch: [ 386, amd64, armv6, armv7, arm64 ]
        go: [ 1.13, 1.14, 1.15, 1.16, 1.17, 1.18 ]
        exclude:
          - os: macos-latest
            arch: 386
          - os: macos-latest
            arch: armv6
          - os: macos-latest
            arch: armv7
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: armv6
          - os: windows-latest
            arch: armv7
          - os: windows-latest
            arch: arm64

    steps:
      - name: Checkout scm
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: 'Test with 386'
        if: ${{ matrix.arch == '386' }}
        env:
          GOARCH: 386
        run: go test -v

      - name: 'Test with amd64'
        if: ${{ matrix.arch == 'amd64' }}
        env:
          GOARCH: amd64
        run: go test -v -race

      - name: 'Build with armv6'
        if: ${{ matrix.arch == 'armv6' }}
        env:
          GOARCH: arm
          GOARM: 6
        run: go test -v -c

      - name: 'Build with armv7'
        if: ${{ matrix.arch == 'armv7' }}
        env:
          GOARCH: arm
          GOARM: 7
        run: go test -v -c

      - name: 'Build with arm64'
        if: ${{ matrix.arch == 'arm64' }}
        env:
          GOARCH: arm64
          CGO_ENABLED: 1
        run: go test -v -c -race

      - name: 'Init arm64 environment'
        if: ${{ matrix.arch == 'arm64' }}
        env:
          GOARCH: arm64
          CGO_ENABLED: 0
        run: |
          # Non-host *.syso files are missing from the Go toolchains provided
          # by setup-go. See https://github.com/actions/setup-go/issues/181.
          curl --location --output ${{ env.GOROOT }}/src/runtime/race/race_linux_arm64.syso \
            https://github.com/golang/go/raw/release-branch.go${{ matrix.go }}/src/runtime/race/race_linux_arm64.syso && \
          sudo apt update && \
          sudo apt install gcc-aarch64-linux-gnu && \
          CC=aarch64-linux-gnu-gcc CC_FOR_TARGET=gcc-aarch64-linux-gnu go test -v -c -race -o gohack.race.test && \
          rm gohack.race.test

      - name: 'Test with arm'
        if: ${{ contains(matrix.arch, 'arm') }}
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          dockerRunArgs: --mount type=bind,source="$(pwd)",target=/checkout,readonly
          run: |
            find /checkout -name '*.test' -type f -executable -print0 | \
              xargs -t -0 -I '{}' sh -c '{} -test.v'
