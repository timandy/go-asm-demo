on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - armv6
          - armv7
          - aarch64
          - x64
        go:
          - '1.13'
          - '1.14'
          - '1.15'
          - '1.16'
          - '1.17'
          - '1.18'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: 'Test with ${{ matrix.go }} amd64'
        if: ${{ matrix.arch == 'x64' }}
        run: go test

      - name: 'Test with ${{ matrix.go }} 386'
        if: ${{ matrix.arch == 'x64' }}
        env:
          GOARCH: 386
        run: go test

      - name: 'Build with ${{ matrix.go }} armv6'
        if: ${{ matrix.arch == 'armv6' }}
        env:
          GOARCH: arm
          GOARM: 6
        run: go test -c

      - name: 'Build with ${{ matrix.go }} armv7'
        if: ${{ matrix.arch == 'armv7' }}
        env:
          GOARCH: arm
          GOARM: 7
        run: go test -c

      - name: 'Build with ${{ matrix.go }} arm64'
        if: ${{ matrix.arch == 'aarch64' }}
        env:
          GOARCH: arm64
        run: go test -c

      - name: 'BuildTestRace with ${{ matrix.go }} for aarch64'
        if: ${{ matrix.arch == 'aarch64' }}
        env:
          GOARCH: arm64
          CGO_ENABLED: 1
        run: |
          # Non-host *.syso files are missing from the Go toolchains provided
          # by setup-go. See https://github.com/actions/setup-go/issues/181.
          sudo apt-get update -y && \
          curl --location --output ${{ env.GOROOT }}/src/runtime/race/race_linux_arm64.syso \
            https://github.com/golang/go/raw/release-branch.go${{ matrix.go }}/src/runtime/race/race_linux_arm64.syso && \
          sudo apt install gcc-aarch64-linux-gnu && \
          CC=aarch64-linux-gnu-gcc CC_FOR_TARGET=gcc-aarch64-linux-gnu go test -c -race -o asm.race.test

      - name: 'Delete race test'
        if: ${{ matrix.arch == 'aarch64' }}
        run: rm asm.race.test

      - name: 'Test with ${{ matrix.go }} on ${{ matrix.arch }}'
        if: ${{ matrix.arch != 'x64' }}
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          dockerRunArgs: --mount type=bind,source="$(pwd)",target=/checkout,readonly
          run: |
            find /checkout -name '*.test' -type f -executable -print0 | \
              xargs -t -0 -I '{}' sh -c '{} -test.v && {} -test.bench=. -test.benchmem -test.v'
